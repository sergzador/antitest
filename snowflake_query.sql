--ANSWER
SELECT P.FSYM_ID, P.P_DATE, P_PRICE, P.CURRENCY, SUM(P_DIVS_PD) AS P_DIVS_PD_AFTER_P_DATE FROM PRICES P
LEFT JOIN DIVIDENTS D ON P.FSYM_ID = D.FSYM_ID AND D.P_DIVS_EXDATE>P.P_DATE
GROUP BY P.FSYM_ID, P.P_DATE,P.P_PRICE,P.CURRENCY
ORDER BY P.FSYM_ID, P.P_DATE ;

--PERFORMANCE TESTING
--100 RANDOM STRINGS TO SIMULATE FSYM_ID VALUES
CREATE OR REPLACE TEMPORARY TABLE FSYM_IDS AS 
SELECT randstr(6, random()) AS FSYM_ID FROM TABLE(GENERATOR(ROWCOUNT => 100));

--1000 DATES
CREATE OR REPLACE TEMPORARY TABLE DATES AS 
SELECT DATEADD(DAY,SEQ4(),'2020-01-01') AS DATE FROM TABLE(GENERATOR(ROWCOUNT => 1000));

-- SIMULATES PRICES TABLE FOR 100 FSYM_ID * 1000 DAYS
CREATE OR REPLACE TEMPORARY TABLE PRICES AS 
SELECT FSYM_ID, DATE AS P_DATE, 'USD' AS CURRENCY ,RANDOM()/10000000000000000 AS P_PRICE
FROM FSYM_IDS, DATES;


-- SIMULATES DIVIDENTS TABLE FOR 100 FSYM_ID * 1000 DAYS
CREATE OR REPLACE TEMPORARY TABLE DIVIDENTS AS 
SELECT FSYM_ID,DATE AS P_DIVS_EXDATE ,RANDOM()/10000000000000000 AS P_DIVS_PD  FROM FSYM_IDS, DATES;

--QUERY RUN
SELECT P.FSYM_ID, P.P_DATE, P_PRICE, P.CURRENCY, SUM(P_DIVS_PD) AS P_DIVS_PD_AFTER_P_DATE FROM PRICES P
LEFT JOIN DIVIDENTS D ON P.FSYM_ID = D.FSYM_ID AND D.P_DIVS_EXDATE>P.P_DATE
GROUP BY P.FSYM_ID, P.P_DATE,P.P_PRICE,P.CURRENCY
ORDER BY P.FSYM_ID, P.P_DATE ;
--TOOK 8.3 SECONDS TO RUN ON EXTRA SMALL WAREHOUSE